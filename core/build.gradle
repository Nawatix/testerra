import org.apache.tools.ant.filters.ReplaceTokens
import org.gradle.internal.jvm.Jvm

dependencies {
    compile core_interop

    compile testng
    compile slf4j
    compile gson
    compile jaxwsrs
    compile jersey
    compile velocity
    compile apache_http
    compile jfreechart
    compile javassist
    compile datatypes
    compile plexus
    compile apache_commons
    compile userAgentPparser

    implementation "javax.xml.bind:jaxb-api:2.3.1"
    implementation "com.sun.xml.bind:jaxb-core:2.3.1"
    implementation "com.sun.xml.bind:jaxb-impl:2.3.1"
    implementation "javax.activation:activation:1.1.1"

}

processResources {
    filesMatching('**/fennec-build.properties') {
        filter ReplaceTokens, tokens: [
                'build.java.version': Jvm.current().javaVersion.toString(),
                'build.os.name'     : System.getProperty("os.name"),
                'build.os.arch'     : System.getProperty("os.arch"),
                'build.os.version'  : System.getProperty("os.version"),
                'build.user.name'   : System.getProperty("user.name"),
                'fennec.version'      : project.version.toString(),
                'build.timestamp'   : new Date().toString()
        ]
    }
}

test {
    exclude '**'
}

task writeBuildInformation() {
    doLast {
        file('src/main/resources/fennec-build.properties').text = """build.java.version=${System.getProperty("java.version")}
build.os.name=${System.getProperty("os.name")}
build.os.arch=${System.getProperty("os.arch")}
build.os.version=${System.getProperty("os.version")}
build.user.name=${System.getProperty("user.name")}
build.timestamp=${new Date()}
build.fennec.version=$version
"""
    }
}
