import org.apache.tools.ant.filters.ReplaceTokens
import org.gradle.internal.jvm.Jvm

dependencies {
    compile core_interop
    implementation 'org.apache.poi:poi-ooxml:3.17'
    implementation 'org.apache.pdfbox:pdfbox:1.8.10'
    implementation 'org.apache.httpcomponents:httpcore:4.4.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5'
    implementation 'com.sun.jersey:jersey-client:1.19.3'

    // <XML>
    compile 'org.jsoup:jsoup:1.7.2'
    compile 'org.jdom:jdom2:2.0.6'
    compile "javax.xml.bind:jaxb-api:2.2.11"
    // </XML

    implementation 'org.codehaus.plexus:plexus-utils:2.1'

    // <Report>
    implementation 'org.apache.velocity:velocity:1.7'
    implementation 'org.jfree:jfreechart:1.0.19'
    // </Report>

    implementation 'com.opencsv:opencsv:3.9'
    implementation 'nl.basjes.parse.useragent:yauaa:4.5'
    implementation 'org.json:json:20140107'
    implementation 'org.reflections:reflections:0.9.11'
}

processResources {
    filesMatching('**/testerra-build.properties') {
        filter ReplaceTokens, tokens: [
                'build.java.version': Jvm.current().javaVersion.toString(),
                'build.os.name'     : System.getProperty("os.name"),
                'build.os.arch'     : System.getProperty("os.arch"),
                'build.os.version'  : System.getProperty("os.version"),
                'build.user.name'   : System.getProperty("user.name"),
                'build.version'     : project.version.toString(),
                'build.timestamp'   : new Date().toString()
        ]
    }
}

test {
    exclude '**'
}

task writeBuildInformation() {
    doLast {
        file('src/main/resources/build.properties').text = """build.java.version=${System.getProperty("java.version")}
build.os.name=${System.getProperty("os.name")}
build.os.arch=${System.getProperty("os.arch")}
build.os.version=${System.getProperty("os.version")}
build.user.name=${System.getProperty("user.name")}
build.timestamp=${new Date()}
build.version=$version
"""
    }
}
